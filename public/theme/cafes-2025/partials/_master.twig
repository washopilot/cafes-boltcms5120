{% setcontent settings = 'settings' returnsingle %}

{% block master_vars %}
    {# Empty by default #}

    <!DOCTYPE html>
    <html dir="ltr" lang="en-US">
        <head>
            <meta http-equiv="content-type" content="text/html; charset=utf-8">
            <meta http-equiv="x-ua-compatible" content="IE=edge">
            <meta name="author" content="jlgranda.com">

            <!-- SEO  -->
            <meta name="description" content="{{settings.meta_description}}">
            <meta name="keywords" content="{{settings.meta_keywords}}">
            <meta property="og:title" content="{{settings.og_title}}"/>
            <meta property="og:description" content="{{settings.og_description}}"/>
            <meta property="og:url" content="{{settings.og_url}}"/>
            <meta property="og:site_name" content="{{settings.site_name}}"/>
            <meta property="og:locale" content="{{settings.og_locale}}"/>
            <meta property="og:image" content="{{absolute_url(settings.og_twitter_image)}}"/>
            <meta property="og:image:width" content="1200"/>
            <meta property="og:image:height" content="630"/>
            <meta property="og:image:alt" content="logocard"/>
            <meta property="og:type" content="website"/>
            <meta name="twitter:card" content="summary_large_image"/>
            <meta name="twitter:creator" content="{{settings.twitter_creator}}"/>
            <meta name="twitter:title" content="{{settings.twitter_title}}"/>
            <meta name="twitter:description" content="{{settings.twitter_description}}"/>
            <meta name="twitter:image" content="{{absolute_url(settings.og_twitter_image)}}"/>
            <meta name="twitter:image:width" content="1200"/>
            <meta name="twitter:image:height" content="630"/>
            <meta name="twitter:image:alt" content="logocard"/>
            <link rel="icon" href="{{settings.favicon|thumbnail(200,196,fit='contain')}}" type="image/x-icon" sizes="200x196"/>

            <!-- Font Imports -->
            <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Marcellus&display=swap">
            <link
            rel="stylesheet" href="https://use.typekit.net/aay8rzy.css">

            <!-- Core Style -->
            <link
            rel="stylesheet" href="{{ asset('style.css') }}">

            <!-- Font Icons -->
            <link
            rel="stylesheet" href="{{ asset('css/font-icons.css') }}">

            <!-- Plugins/Components CSS -->
            <link rel="stylesheet" href="{{ asset('demos/skincare/css/rs6.css') }}">
            <link rel="stylesheet" href="{{ asset('demos/skincare/scroll/scroll.css') }}">
            {% if isListingProducts is defined %}
                <link rel="stylesheet" href="{{asset('css/swiper.css')}}">
                <link rel="stylesheet" href="{{asset('css/components/ion.rangeslider.css')}}">
            {% endif %}

            <!-- Niche Demos -->
            <link
            rel="stylesheet" href="{{ asset('demos/skincare/skincare.css') }}">

            <!-- Custom CSS -->
            <link rel="stylesheet" href="{{ asset('css/custom.css') }}">
            <meta
            name="viewport" content="width=device-width, initial-scale=1">

            <!-- Document Title ============================================= -->
            <title>
                {%- if record|default and record.title -%}
                    {{- record.title ~ ' | ' -}}
                {%- endif -%}
                {{- config.get('general/sitename') -}}
                {%- if record|default == null and config.has('general/payoff') -%}
                    {{- ' | ' ~ config.get('general/payoff') -}}
                {%- endif -%}
            </title>
        </head>

        <body
            class="stretched">
            <!-- Document Wrapper ============================================= -->
            <div id="wrapper">
                {% block main %}
                    {# ---- twig content here --- #}
                {% endblock main %}
            </div>
            <!-- #wrapper end -->

            <!-- Go To Top
            ============================================= -->
            <div id="gotoTop" class="uil uil-angle-up"></div>

            <!-- JavaScripts
            ============================================= -->
            <script src="{{ asset('js/plugins.min.js') }}"></script>
            <script src="{{ asset('js/functions.bundle.js') }}"></script>
            <script src="{{ asset('js/smooth-scroll.js') }}"></script>

            <!-- Revolution Slider
            ============================================= -->
            <script src="{{ asset('demos/skincare/js/rs/rbtools.min.js') }}"></script>
            <script src="{{ asset('demos/skincare/js/rs/rs6.min.js') }}"></script>
            <script src="https://cdn.jsdelivr.net/npm/circletype@2.3.0/dist/circletype.min.js"></script>

            {% if isListingProducts is defined %}
                <!-- Range Slider Plugin -->
                <script src="{{asset('js/components/rangeslider.min.js')}}"></script>
            {% endif %}

            <script>
                var tpj = jQuery;
                if (window.RS_MODULES === undefined) 
                    window.RS_MODULES = {};
                


                if (RS_MODULES.modules === undefined) 
                    RS_MODULES.modules = {};
                


                RS_MODULES.modules["revslider401"] = {
                    once: RS_MODULES.modules["revslider401"] !== undefined ? RS_MODULES.modules["revslider401"].once : undefined,
                    init: function () {
                        window.revapiShop = window.revapiShop === undefined || window.revapiShop === null || window.revapiShop.length === 0 ? document.getElementById("rev_slider_shop") : window.revapiShop;
                        if (window.revapiShop === null || window.revapiShop === undefined || window.revapiShop.length == 0) {
                            window.revapiShopinitTry = window.revapiShopinitTry === undefined ? 0 : window.revapiShopinitTry + 1;
                            if (window.revapiShopinitTry < 20) 
                                requestAnimationFrame(function () {
                                    RS_MODULES.modules["revslider401"].init()
                                });
                            


                            return;
                        }
                        window.revapiShop = jQuery(window.revapiShop);
                        if (window.revapiShop.revolution == undefined) {
                            revslider_showDoubleJqueryError("rev_slider_shop");
                            return;
                        }
                        revapiShop.revolutionInit({
                            revapi: "revapiShop",
                            DPR: "dpr",
                            sliderLayout: "fullscreen",
                            duration: "7000ms",
                            visibilityLevels: "1140,1024,778,480",
                            gridwidth: "1240,1024,778,480",
                            gridheight: "900,768,960,720",
                            lazyType: "smart",
                            perspective: 600,
                            perspectiveType: "global",
                            editorheight: "900,768,960,720",
                            responsiveLevels: "1140,1024,778,480",
                            stopAtSlide: 1,
                            stopAfterLoops: 0,
                            stopLoop: false,
                            progressBar: {
                                disableProgressBar: true
                            },
                            navigation: {
                                onHoverStop: false
                            },
                            parallax: {
                                levels: [
                                    5,
                                    10,
                                    15,
                                    20,
                                    25,
                                    30,
                                    35,
                                    40,
                                    45,
                                    46,
                                    47,
                                    48,
                                    49,
                                    50,
                                    51,
                                    30
                                ],
                                type: "scroll",
                                origo: "slidercenter",
                                speed: 0
                            },
                            viewPort: {
                                global: false,
                                globalDist: "0px",
                                enable: true,
                                visible_area: "0px"
                            },
                            fallbacks: {
                                allowHTML5AutoPlayOnAndroid: true
                            }
                        });

                    }
                }; // End of RevInitScript

                var circleType = new CircleType(document.getElementById("rotated-text")).radius(86);
            </script>

            {% if isListingProducts is defined and price_range_from is defined and price_range_to is defined %}
                <script>
                    jQuery(".button-filter").click(function () {
                        jQuery(".skincare-filter").toggleClass("skincare-filter-hide");
                        jQuery(this).toggleClass("button-filter-active-hide");
                        SEMICOLON.Modules.gridInit();
                    });

                    var priceRangefrom = 0,
                        priceRangeto = 0,
                        $container = jQuery('#shop');

                    jQuery(window).on('load', function () {

                        jQuery(window).resize(function () {
                            $container.isotope('layout');
                        });

                    });

                    jQuery(document).ready(function ($) {
                        var $priceRange = jQuery(".price-range"),
                            $priceInputFrom = jQuery(".price-range-from"),
                            $priceInputTo = jQuery(".price-range-to"),
                            min = {{ price_range_from }},
                            max = {{ price_range_to }},
                            prefix = '$ ';

                        $priceRange.ionRangeSlider({
                            skin: "round",
                            type: "double",
                            min: min,
                            max: max,
                            from: min,
                            to: max,
                            prefix: prefix,
                            hide_min_max: true,
                            hide_from_to: true,
                            onStart: function (data) {
                                priceRangefrom = data.from;
                                priceRangeto = data.to;
                                updateInputs(data);
                            },
                            onChange: updateInputs,
                            onFinish: function (data) {
                                priceRangefrom = data.from;
                                priceRangeto = data.to;

                                $container.isotope({
                                    filter: function () {
                                        if (jQuery(this).find('.product-price').find('ins').length > 0) {
                                            var price = jQuery(this).find('.product-price ins').text();
                                        } else {
                                            var price = jQuery(this).find('.product-price').text();
                                        }

                                        priceNum = price.split("$");

                                        return(priceRangefrom <= priceNum[1] && priceRangeto >= priceNum[1]);
                                    }
                                });
                            }
                        });

                        function updateInputs(data) {
                            from = data.from;
                            to = data.to;

                            $priceInputFrom.text(prefix + from);
                            $priceInputTo.text(prefix + to);
                        }

                        jQuery(".dropdown-item span").on('click', function () {
                            var displayText = jQuery(this).text();
                            jQuery("#shop-filter-btn").html(displayText);
                            jQuery(this).parents('.dropdown').find('.show').toggleClass('show', false);
                        });
                    });

                    jQuery(window).on('load', function () {
                        jQuery('.shop-filter').find('li:not(.custom-filter-reset)').each(function () {
                            var element = jQuery(this),
                                elementFilter = element.children().attr('data-filter'),
                                elementFilterContainer = element.parents('.custom-filter').attr('data-container');

                            elementFilterCount = Number(jQuery(elementFilterContainer).find('.product').filter(elementFilter).length);

                            element.find('.shop-filter-count').text(elementFilterCount);

                        });

                        jQuery('#shop').isotope({
                            getSortData: {
                                name_az: '.product-title',
                                name_za: '.product-title',
                                price_lh: function (itemElem) {
                                    if (jQuery(itemElem).find('.product-price').find('ins').length > 0) {
                                        var price = jQuery(itemElem).find('.product-price ins').text();
                                    } else {
                                        var price = jQuery(itemElem).find('.product-price').text();
                                    }

                                    priceNum = price.split("$");

                                    return parseFloat(priceNum[1]);
                                },
                                price_hl: function (itemElem) {
                                    if (jQuery(itemElem).find('.product-price').find('ins').length > 0) {
                                        var price = jQuery(itemElem).find('.product-price ins').text();
                                    } else {
                                        var price = jQuery(itemElem).find('.product-price').text();
                                    }

                                    priceNum = price.split("$");

                                    return parseFloat(priceNum[1]);
                                }
                            },
                            sortAscending: {
                                name_az: true,
                                name_za: false,
                                price_lh: true,
                                price_hl: false
                            }
                        });

                        jQuery(document).on('click', '.shop-sorting li a', function (e) {
                            e.preventDefault();
                            var $li = jQuery(this).parent();
                            $li.siblings().removeClass('active-filter');
                            $li.addClass('active-filter');
                            var sortByValue = jQuery(this).attr('data-sort-by');
                            jQuery('#shop').isotope({sortBy: sortByValue});
                        });
                    });
                </script>
            {% endif %}

            {% if isRecord is defined %}
                <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        // Seleccionar todas las imágenes en el contenido
                        const images = document.querySelectorAll('article img');
                        
                        if (!navigator.share) {
                            console.log('Web Share API no soportada en este navegador');
                        }

                        images.forEach(img => {
                            // Crear botón de compartir
                            const shareBtn = document.createElement('button');
                            shareBtn.className = 'share-btn';
                            shareBtn.innerHTML = '<i class="uil uil-share-alt"></i>';
                            
                            // Insertar después de la imagen
                            img.parentNode.insertBefore(shareBtn, img.nextSibling);

                            // Funcionalidad de compartir
                            shareBtn.addEventListener('click', async () => {
                                try {
                                    console.log('Intentando compartir imagen:', img.src);
                                    
                                    if (navigator.share) {
                                        try {
                                            console.log('Creando blob desde:', img.src);
                                            const response = await fetch(img.src);
                                            if (!response.ok) throw new Error(`HTTP ${response.status}`);
                                            
                                            const blob = await response.blob();
                                            const filesArray = [
                                                new File(
                                                    [blob],
                                                    'imagen-compartida.jpg',
                                                    {
                                                        type: blob.type || 'image/jpeg',
                                                        lastModified: new Date().getTime()
                                                    }
                                                )
                                            ];
                                            
                                            await navigator.share({
                                                title: 'Compartir imagen',
                                                text: 'Mira esta imagen',
                                                files: filesArray
                                            });
                                            console.log('Imagen compartida como archivo');
                                        } catch (e) {
                                            console.warn('Error compartiendo como archivo:', e);
                                            // Fallback a compartir URL
                                            await navigator.share({
                                                title: 'Compartir imagen',
                                                text: 'Mira esta imagen',
                                                url: img.src
                                            });
                                        }
                                    } else {
                                        // Fallback para navegadores sin Web Share API
                                        console.log('Usando fallback de copiar URL');
                                        try {
                                            await navigator.clipboard.writeText(img.src);
                                            alert('URL de la imagen copiada al portapapeles: ' + img.src);
                                        } catch (e) {
                                            console.error('Error copiando URL:', e);
                                            prompt('Copie esta URL para compartir:', img.src);
                                        }
                                    }
                                } catch (err) {
                                    console.error('Error al compartir:', err);
                                    alert('Error al compartir la imagen');
                                }
                            });
                        });
                    });
                </script>
            {% endif %}

        </body>

    </html>
{% endblock %}

